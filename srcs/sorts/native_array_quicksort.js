// Generated by CoffeeScript 1.6.3
/*
  recursive based sort

  base case -> if the array has one or zero item , it's considered as sorted
  recursive case ->
    1. choose a pivot ( here, the middle of the array )
    2. make two empty arrays 'smaller' and 'greater'
      2.1 iterate through tab and everything lower than the pivot go to smaller, the rest go to greather
    3. return a concatenation of quicksort smaller + pivot + quicksort greater
*/

var native_array_quick_sort;

native_array_quick_sort = function(arr) {
  var greater, i, pivot, smaller, _i, _len;
  if (arr.length <= 1) {
    return arr;
  }
  pivot = arr.splice(Math.floor(arr.length / 2), 1);
  greater = [];
  smaller = [];
  for (_i = 0, _len = arr.length; _i < _len; _i++) {
    i = arr[_i];
    if (i <= pivot) {
      smaller.push(i);
    } else {
      greater.push(i);
    }
  }
  return native_array_quick_sort(smaller).concat(pivot, native_array_quick_sort(greater));
};

module.exports = native_array_quick_sort;
